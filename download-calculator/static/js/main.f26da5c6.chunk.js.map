{"version":3,"sources":["Unit.ts","utils.ts","App.tsx","index.tsx"],"names":["Unit","downloadUnits","label","value","MEGABIT","MEGABYTE","GIGABIT","GIGABYTE","convertToMegaBytes","number","unit","App","useState","downloadRate","setDownloadRate","downloadRateUnits","setDownloadRateUnits","totalSize","setTotalSize","totalSizeUnits","setTotalSizeUnits","timeToDownload","downloadRateNumber","Number","totalSizeNumber","isNaN","convertedDownloadRate","secondsToDownload","hours","Math","floor","minutes","seconds","toFixed","getTimeToDownload","className","Container","Row","Col","sm","offset","span","Form","Group","controlId","Label","Control","onChange","e","target","Select","map","option","find","du","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f26da5c6.chunk.js","sourcesContent":["enum Unit {\r\n    MEGABIT = 'MEGABIT',\r\n    MEGABYTE = 'MEGABYTE',\r\n    GIGABIT = 'GIGABIT',\r\n    GIGABYTE = 'GIGABYTE'\r\n}\r\n\r\nexport default Unit;","import Unit from \"./Unit\";\r\n\r\nexport const downloadUnits: ReadonlyArray<any> = [\r\n    {\r\n        label: 'Mb',\r\n        value: Unit.MEGABIT\r\n    },\r\n    {\r\n        label: 'MB',\r\n        value: Unit.MEGABYTE\r\n    },\r\n    {\r\n        label: 'Gb',\r\n        value: Unit.GIGABIT\r\n    },\r\n    {\r\n        label: 'GB',\r\n        value: Unit.GIGABYTE\r\n    }\r\n];\r\n\r\nexport const convertToMegaBytes = (number: number, unit: Unit): number => {\r\n    switch (unit) {\r\n        case Unit.MEGABYTE:\r\n            return number;\r\n        case Unit.MEGABIT:\r\n            return number / 8;\r\n        case Unit.GIGABIT:\r\n            return number / 125;\r\n        case Unit.GIGABYTE:\r\n            return number * 1000;\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nexport const getTimeToDownload = (downloadRate: string, downloadRateUnits: Unit, totalSize: string, totalSizeUnits: Unit) => {\r\n    const downloadRateNumber: number = Number(downloadRate);\r\n    const totalSizeNumber: number = Number(totalSize);\r\n\r\n    if (isNaN(downloadRateNumber) || isNaN(totalSizeNumber) || downloadRateNumber <= 0 || totalSizeNumber <= 0) {\r\n        return null;\r\n    }\r\n\r\n    const convertedDownloadRate: number = convertToMegaBytes(downloadRateNumber, downloadRateUnits);\r\n    const convertedTotalSize: number = convertToMegaBytes(totalSizeNumber, totalSizeUnits);\r\n\r\n    const secondsToDownload = convertedTotalSize / convertedDownloadRate;\r\n\r\n    const hours = Math.floor(secondsToDownload / 3600);\r\n\r\n    const minutes = Math.floor((secondsToDownload % 3600) / 60);\r\n\r\n    const seconds = Math.floor((secondsToDownload % 3600) % 60);\r\n\r\n    return { hours: hours.toFixed(), minutes: minutes, seconds: seconds };\r\n}","import { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './App.css';\nimport Unit from './Unit';\nimport { downloadUnits, getTimeToDownload } from './utils';\n\nfunction App() {\n  const [downloadRate, setDownloadRate] = useState('');\n  const [downloadRateUnits, setDownloadRateUnits] = useState(Unit.MEGABIT);\n  const [totalSize, setTotalSize] = useState('');\n  const [totalSizeUnits, setTotalSizeUnits] = useState(Unit.GIGABYTE);\n\n  const timeToDownload = getTimeToDownload(downloadRate, downloadRateUnits, totalSize, totalSizeUnits);\n\n  return (\n    <>\n      <h2 className=\"text-center mt-2\">Download Calculator</h2>\n\n      <Container >\n        <Row>\n          <Col sm={{ offset: '3', span: '3' }}>\n            <Form.Group className=\"mb-3\" controlId=\"downloadRate\">\n              <Form.Label className=\"text-nowrap\">Download Rate:</Form.Label>\n              <Form.Control value={downloadRate} onChange={e => setDownloadRate(e.target.value)} />\n            </Form.Group>\n          </Col>\n          <Col sm=\"3\">\n            <Form.Group className=\"mb-3\" controlId=\"downloadRateUnits\">\n              <Form.Label>Units:</Form.Label>\n              <Form.Select value={downloadRateUnits} onChange={(e: any) => setDownloadRateUnits(e.target.value as unknown as Unit)}>\n                {downloadUnits.map(option => <option key={option.value} value={option.value}>{option.label}/s</option>)}\n              </Form.Select>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col sm={{ offset: '3', span: '3' }}>\n            <Form.Group className=\"mb-3\" controlId=\"downloadSize\">\n              <Form.Label>Total Size:</Form.Label>\n              <Form.Control value={totalSize} onChange={e => setTotalSize(e.target.value)} />\n            </Form.Group>\n          </Col>\n          <Col sm=\"3\">\n            <Form.Group className=\"mb-3\" controlId=\"downloadSizeUnits\">\n              <Form.Label>Units:</Form.Label>\n              <Form.Select value={totalSizeUnits} onChange={(e: any) => setTotalSizeUnits(e.target.value as unknown as Unit)}>\n                {downloadUnits.map(option => <option key={option.value} value={option.value}>{option.label}</option>)}\n              </Form.Select>\n            </Form.Group>\n          </Col>\n        </Row>\n\n        {timeToDownload && (\n          <Row>\n            <Col className=\"d-flex justify-content-center mt-2\">\n              It will take {timeToDownload.hours} hours {timeToDownload.minutes} minutes and {timeToDownload.seconds} seconds to download\n              {' '} {totalSize} {downloadUnits.find(du => du.value === totalSizeUnits)?.label}\n              {' '} at {downloadRate} {downloadUnits.find(du => du.value === downloadRateUnits)?.label}/s\n            </Col>\n          </Row>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}